# Based on https://github.com/actions/starter-workflows/blob/main/ci/python-publish.yml

name: Create executables

on:
  push:
    branches:
      - test-pyinstaller

permissions:
  contents: read

jobs:
  build-executables:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Download python-build-standalone (Linux)
        if: runner.os != 'Windows'
        run: |
          meta=$(curl -s https://raw.githubusercontent.com/astral-sh/python-build-standalone/latest-release/latest-release.json)
          tag=$(echo "$meta" | python3 -c "import sys, json; print(json.load(sys.stdin)['tag'])")
          prefix=$(echo "$meta" | python3 -c "import sys, json; print(json.load(sys.stdin)['asset_url_prefix'])")
          file=$(curl -s https://api.github.com/repos/astral-sh/python-build-standalone/releases/tags/${tag} | \
            python3 -c "import sys, json; print([a['name'] for a in json.load(sys.stdin)['assets'] if a['name'].startswith('cpython-3.13') and 'x86_64-unknown-linux-gnu-install_only.tar.gz' in a['name']][0])")
          url="${prefix}/${file}"
          echo "Download: $url"
          curl -L -o python.tar.zst "$url"
          mkdir python-standalone
          tar --use-compress-program=unzstd -xf python.tar.zst -C python-standalone --strip-components=1

      - name: Build executable & ZIP result (Linux)
        if: runner.os != 'Windows'
        run: |
          export PATH=$PWD/python-standalone/bin:$PATH
          python-standalone/bin/python3 -m pip install --upgrade pip
          python-standalone/bin/python3 -m pip install --upgrade pyinstaller
          python-standalone/bin/python3 -m pip install .
          cd pyinstaller
          ../python-standalone/bin/python3 -m PyInstaller \
            --log-level=DEBUG \
            --debug=all \
            --collect-all PyQt5 \
            --collect-all pyqtgraph \
            --name test \
            --onedir \
            --noconfirm \
            launch.py
          cd dist
          zip -r test-linux.zip *
  
